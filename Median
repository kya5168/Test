// A Simple Merge based O(n) solution 
// to find median of two sorted arrays
using System;
class GFG
{
    // function to calculate median
    static int getMedian(int[] arr1,
                        int[] arr2,
                        int n)
    {
        int i = 0;
        int j = 0;
        int count;
        int m1 = -1, m2 = -1;

        // Since there are 2n elements, 
        // median will be average of 
        // elements at index n-1 and n in 
        // the array obtained after 
        // merging ar1 and ar2
        for (count = 0; count <= n; count++)
        {
            // Below is to handle case 
            // where all elements of ar1[] 
            // are smaller than smallest
            // (or first) element of ar2[] 
            if (i == n)
            {
                m1 = m2;
                m2 = arr2[0];
                break;
            }

            /* Below is to handle case where all 
			elements of ar2[] are smaller than 
			smallest(or first) element of ar1[] */
            else if (j == n)
            {
                m1 = m2;
                m2 = arr1[0];
                break;
            }

            if (arr1[i] < arr2[j])
            {
                // Store the prev median 
                m1 = m2;
                m2 = arr1[i];
                i++;
            }
            else
            {
                // Store the prev median 
                m1 = m2;
                m2 = arr2[j];
                j++;
            }
        }

        return (m1 + m2) / 2;
    }

    // Driver Code
    public static void Main()
    {
        int[] ar1 = { 1, 12, 15, 26, 38 };
        int[] ar2 = { 2, 13, 17, 30, 45 };

        int n1 = ar1.Length;
        int n2 = ar2.Length;
        if (n1 == n2)
            Console.Write("Median is " +
                        getMedian(ar1, ar2, n1));
        else
            Console.Write("arrays are of unequal size");
    }
}
